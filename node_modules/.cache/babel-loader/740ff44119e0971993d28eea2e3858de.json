{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _isValidIdentifier = _interopRequireDefault(require(\"../validators/isValidIdentifier\"));\n\nvar _generated = require(\"../builders/generated\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar isPlainObject = require(\"lodash/isPlainObject\");\n\nvar _default = valueToNode;\nexports.default = _default;\n\nfunction isRegExp(value) {\n  return Object.prototype.toString.call(value) === \"[object RegExp]\";\n}\n\nfunction valueToNode(value) {\n  if (value === undefined) {\n    return (0, _generated.identifier)(\"undefined\");\n  }\n\n  if (value === true || value === false) {\n    return (0, _generated.booleanLiteral)(value);\n  }\n\n  if (value === null) {\n    return (0, _generated.nullLiteral)();\n  }\n\n  if (typeof value === \"string\") {\n    return (0, _generated.stringLiteral)(value);\n  }\n\n  if (typeof value === \"number\") {\n    var result;\n\n    if (Number.isFinite(value)) {\n      result = (0, _generated.numericLiteral)(Math.abs(value));\n    } else {\n      var numerator;\n\n      if (Number.isNaN(value)) {\n        numerator = (0, _generated.numericLiteral)(0);\n      } else {\n        numerator = (0, _generated.numericLiteral)(1);\n      }\n\n      result = (0, _generated.binaryExpression)(\"/\", numerator, (0, _generated.numericLiteral)(0));\n    }\n\n    if (value < 0 || Object.is(value, -0)) {\n      result = (0, _generated.unaryExpression)(\"-\", result);\n    }\n\n    return result;\n  }\n\n  if (isRegExp(value)) {\n    var pattern = value.source;\n    var flags = value.toString().match(/\\/([a-z]+|)$/)[1];\n    return (0, _generated.regExpLiteral)(pattern, flags);\n  }\n\n  if (Array.isArray(value)) {\n    return (0, _generated.arrayExpression)(value.map(valueToNode));\n  }\n\n  if (isPlainObject(value)) {\n    var props = [];\n\n    for (var _i = 0, _Object$keys = Object.keys(value); _i < _Object$keys.length; _i++) {\n      var key = _Object$keys[_i];\n      var nodeKey = void 0;\n\n      if ((0, _isValidIdentifier.default)(key)) {\n        nodeKey = (0, _generated.identifier)(key);\n      } else {\n        nodeKey = (0, _generated.stringLiteral)(key);\n      }\n\n      props.push((0, _generated.objectProperty)(nodeKey, valueToNode(value[key])));\n    }\n\n    return (0, _generated.objectExpression)(props);\n  }\n\n  throw new Error(\"don't know how to turn this value into a node\");\n}","map":{"version":3,"sources":["C:/Users/saros/OneDrive/Desktop/Sarosh/node_modules/@babel/types/lib/converters/valueToNode.js"],"names":["Object","defineProperty","exports","value","default","_isValidIdentifier","_interopRequireDefault","require","_generated","obj","__esModule","isPlainObject","_default","valueToNode","isRegExp","prototype","toString","call","undefined","identifier","booleanLiteral","nullLiteral","stringLiteral","result","Number","isFinite","numericLiteral","Math","abs","numerator","isNaN","binaryExpression","is","unaryExpression","pattern","source","flags","match","regExpLiteral","Array","isArray","arrayExpression","map","props","keys","key","nodeKey","push","objectProperty","objectExpression","Error"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,kBAAkB,GAAGC,sBAAsB,CAACC,OAAO,CAAC,iCAAD,CAAR,CAA/C;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,uBAAD,CAAxB;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD;;AAE/F,IAAME,aAAa,GAAGJ,OAAO,CAAC,sBAAD,CAA7B;;AAEA,IAAIK,QAAQ,GAAGC,WAAf;AACAX,OAAO,CAACE,OAAR,GAAkBQ,QAAlB;;AAEA,SAASE,QAAT,CAAkBX,KAAlB,EAAyB;AACvB,SAAOH,MAAM,CAACe,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+Bd,KAA/B,MAA0C,iBAAjD;AACD;;AAED,SAASU,WAAT,CAAqBV,KAArB,EAA4B;AAC1B,MAAIA,KAAK,KAAKe,SAAd,EAAyB;AACvB,WAAO,CAAC,GAAGV,UAAU,CAACW,UAAf,EAA2B,WAA3B,CAAP;AACD;;AAED,MAAIhB,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAhC,EAAuC;AACrC,WAAO,CAAC,GAAGK,UAAU,CAACY,cAAf,EAA+BjB,KAA/B,CAAP;AACD;;AAED,MAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,WAAO,CAAC,GAAGK,UAAU,CAACa,WAAf,GAAP;AACD;;AAED,MAAI,OAAOlB,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAO,CAAC,GAAGK,UAAU,CAACc,aAAf,EAA8BnB,KAA9B,CAAP;AACD;;AAED,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,QAAIoB,MAAJ;;AAEA,QAAIC,MAAM,CAACC,QAAP,CAAgBtB,KAAhB,CAAJ,EAA4B;AAC1BoB,MAAAA,MAAM,GAAG,CAAC,GAAGf,UAAU,CAACkB,cAAf,EAA+BC,IAAI,CAACC,GAAL,CAASzB,KAAT,CAA/B,CAAT;AACD,KAFD,MAEO;AACL,UAAI0B,SAAJ;;AAEA,UAAIL,MAAM,CAACM,KAAP,CAAa3B,KAAb,CAAJ,EAAyB;AACvB0B,QAAAA,SAAS,GAAG,CAAC,GAAGrB,UAAU,CAACkB,cAAf,EAA+B,CAA/B,CAAZ;AACD,OAFD,MAEO;AACLG,QAAAA,SAAS,GAAG,CAAC,GAAGrB,UAAU,CAACkB,cAAf,EAA+B,CAA/B,CAAZ;AACD;;AAEDH,MAAAA,MAAM,GAAG,CAAC,GAAGf,UAAU,CAACuB,gBAAf,EAAiC,GAAjC,EAAsCF,SAAtC,EAAiD,CAAC,GAAGrB,UAAU,CAACkB,cAAf,EAA+B,CAA/B,CAAjD,CAAT;AACD;;AAED,QAAIvB,KAAK,GAAG,CAAR,IAAaH,MAAM,CAACgC,EAAP,CAAU7B,KAAV,EAAiB,CAAC,CAAlB,CAAjB,EAAuC;AACrCoB,MAAAA,MAAM,GAAG,CAAC,GAAGf,UAAU,CAACyB,eAAf,EAAgC,GAAhC,EAAqCV,MAArC,CAAT;AACD;;AAED,WAAOA,MAAP;AACD;;AAED,MAAIT,QAAQ,CAACX,KAAD,CAAZ,EAAqB;AACnB,QAAM+B,OAAO,GAAG/B,KAAK,CAACgC,MAAtB;AACA,QAAMC,KAAK,GAAGjC,KAAK,CAACa,QAAN,GAAiBqB,KAAjB,CAAuB,cAAvB,EAAuC,CAAvC,CAAd;AACA,WAAO,CAAC,GAAG7B,UAAU,CAAC8B,aAAf,EAA8BJ,OAA9B,EAAuCE,KAAvC,CAAP;AACD;;AAED,MAAIG,KAAK,CAACC,OAAN,CAAcrC,KAAd,CAAJ,EAA0B;AACxB,WAAO,CAAC,GAAGK,UAAU,CAACiC,eAAf,EAAgCtC,KAAK,CAACuC,GAAN,CAAU7B,WAAV,CAAhC,CAAP;AACD;;AAED,MAAIF,aAAa,CAACR,KAAD,CAAjB,EAA0B;AACxB,QAAMwC,KAAK,GAAG,EAAd;;AAEA,oCAAkB3C,MAAM,CAAC4C,IAAP,CAAYzC,KAAZ,CAAlB,kCAAsC;AAAjC,UAAM0C,GAAG,mBAAT;AACH,UAAIC,OAAO,SAAX;;AAEA,UAAI,CAAC,GAAGzC,kBAAkB,CAACD,OAAvB,EAAgCyC,GAAhC,CAAJ,EAA0C;AACxCC,QAAAA,OAAO,GAAG,CAAC,GAAGtC,UAAU,CAACW,UAAf,EAA2B0B,GAA3B,CAAV;AACD,OAFD,MAEO;AACLC,QAAAA,OAAO,GAAG,CAAC,GAAGtC,UAAU,CAACc,aAAf,EAA8BuB,GAA9B,CAAV;AACD;;AAEDF,MAAAA,KAAK,CAACI,IAAN,CAAW,CAAC,GAAGvC,UAAU,CAACwC,cAAf,EAA+BF,OAA/B,EAAwCjC,WAAW,CAACV,KAAK,CAAC0C,GAAD,CAAN,CAAnD,CAAX;AACD;;AAED,WAAO,CAAC,GAAGrC,UAAU,CAACyC,gBAAf,EAAiCN,KAAjC,CAAP;AACD;;AAED,QAAM,IAAIO,KAAJ,CAAU,+CAAV,CAAN;AACD","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\n\r\nvar _isValidIdentifier = _interopRequireDefault(require(\"../validators/isValidIdentifier\"));\r\n\r\nvar _generated = require(\"../builders/generated\");\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nconst isPlainObject = require(\"lodash/isPlainObject\");\r\n\r\nvar _default = valueToNode;\r\nexports.default = _default;\r\n\r\nfunction isRegExp(value) {\r\n  return Object.prototype.toString.call(value) === \"[object RegExp]\";\r\n}\r\n\r\nfunction valueToNode(value) {\r\n  if (value === undefined) {\r\n    return (0, _generated.identifier)(\"undefined\");\r\n  }\r\n\r\n  if (value === true || value === false) {\r\n    return (0, _generated.booleanLiteral)(value);\r\n  }\r\n\r\n  if (value === null) {\r\n    return (0, _generated.nullLiteral)();\r\n  }\r\n\r\n  if (typeof value === \"string\") {\r\n    return (0, _generated.stringLiteral)(value);\r\n  }\r\n\r\n  if (typeof value === \"number\") {\r\n    let result;\r\n\r\n    if (Number.isFinite(value)) {\r\n      result = (0, _generated.numericLiteral)(Math.abs(value));\r\n    } else {\r\n      let numerator;\r\n\r\n      if (Number.isNaN(value)) {\r\n        numerator = (0, _generated.numericLiteral)(0);\r\n      } else {\r\n        numerator = (0, _generated.numericLiteral)(1);\r\n      }\r\n\r\n      result = (0, _generated.binaryExpression)(\"/\", numerator, (0, _generated.numericLiteral)(0));\r\n    }\r\n\r\n    if (value < 0 || Object.is(value, -0)) {\r\n      result = (0, _generated.unaryExpression)(\"-\", result);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  if (isRegExp(value)) {\r\n    const pattern = value.source;\r\n    const flags = value.toString().match(/\\/([a-z]+|)$/)[1];\r\n    return (0, _generated.regExpLiteral)(pattern, flags);\r\n  }\r\n\r\n  if (Array.isArray(value)) {\r\n    return (0, _generated.arrayExpression)(value.map(valueToNode));\r\n  }\r\n\r\n  if (isPlainObject(value)) {\r\n    const props = [];\r\n\r\n    for (const key of Object.keys(value)) {\r\n      let nodeKey;\r\n\r\n      if ((0, _isValidIdentifier.default)(key)) {\r\n        nodeKey = (0, _generated.identifier)(key);\r\n      } else {\r\n        nodeKey = (0, _generated.stringLiteral)(key);\r\n      }\r\n\r\n      props.push((0, _generated.objectProperty)(nodeKey, valueToNode(value[key])));\r\n    }\r\n\r\n    return (0, _generated.objectExpression)(props);\r\n  }\r\n\r\n  throw new Error(\"don't know how to turn this value into a node\");\r\n}"]},"metadata":{},"sourceType":"script"}